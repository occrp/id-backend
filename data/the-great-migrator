#!/bin/bash

#
# The Great Migrator
# 
# does everything that needs to be done to migrate Google App Engine data
# and GDrive files to the new infrastructure
#

trap abort SIGINT
function abort {
    echo
    echo "* * * ABORTED * * *"
    echo 
    exit 0
}

# display a general error message
# $1 -- additional error msg to display
function display_error {
  echo
  echo "########################################"
  echo "###   AN ERROR OCCURED, ABORTING!    ###"
  echo "###   ---------------------------    ###"
  echo "### inspect the log output carefully ###"
  echo "########################################"
  echo
  # if we have an additional error msg set, use it
  [ -z ${1+x} ] || {
    echo "$1"
    echo
  }
}

# rudimentary error handling -- exit the script
function display_error_and_quit {
  if [ -z ${1+x} ]; then
    display_error
  else
    display_error "$1"
  fi
  read
  exit 1
}

# usage info
function usage_and_help {
    echo
    echo "Usage:"
    echo "  $0 [/path/to/old_id [/path/to/google_appengine [/path/to/data/export_dir]]]"
    echo
    echo "By default, paths are compatible with docker-compose id2dataimports config:"
    echo "  - /usr/src/id               (old investigative-dashboard)"
    echo "  - /usr/src/google_appengine (Google AppEngine API)"
    echo "  - /exported                 (ID1 exported data and related temporary files)"
    echo
    echo "Paths can be set via command-line arguments, or via environment variables:"
    echo " - \$ID_PATH"
    echo " - \$GAE_PATH"
    echo " - \$EXPORT_PATH"
    echo
}


#
# handle the command-line
#

# first arg?
if [ ! -z ${1+x} ]; then

    # help?
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        usage_and_help
        exit 0
    # path!
    else
        ID_PATH="$1"
        
        # second arg?
        if [ ! -z ${2+x} ]; then
            GAE_PATH="$2"
            
            # third arg?
            if [ ! -z ${3+x} ]; then
                EXPORT_PATH="$3"
                
                # sainty check
                if [ ! -z ${4+x} ]; then
                    usage_and_help
                    exit 1
                fi
            fi
        fi
    fi
fi


# required vars -- set to defaults if not set
[ -z ${ID_PATH+x} ]     && ID_PATH="/usr/src/id"
[ -z ${GAE_PATH+x} ]    && GAE_PATH="/usr/src/google_appengine"
[ -z ${EXPORT_PATH+x} ] && EXPORT_PATH="/exported"

# need it for later
CWD="$( pwd )"
DATAWD="$( readlink -f "$( dirname  "$0" )" )"

#
# BigTable export
#
echo
echo "+-- BigTable export script"
cd "$DATAWD/exporters/"

./bigtable-export.sh --prod "$ID_PATH" "$GAE_PATH" "$EXPORT_PATH/" || display_error_and_quit "Error exporting data from Google AppEngine"

#
# UserProfile and Ticket data import
#

echo
echo "+-- importing..."
cd "$DATAWD/importers/ID1_Import"

echo
echo "    +-- UserProfiles..."
python UserProfiles_to_DjangoUsers.py "$EXPORT_PATH/UserProfile.csv" || display_error_and_quit "Error importing UserProfiles to ID2"

echo
echo "    +-- Tickets..."
python Tickets_to_ID2Tickets.py "$EXPORT_PATH/Ticket.csv" || display_error_and_quit "Error importing Tickets to ID2"
 
echo
echo "    +-- TicketUpdates..."
python TicketUpdates_to_ID2TicketUpdates.py "$EXPORT_PATH/TicketUpdate.csv" || display_error_and_quit "Error importing TicketUpdates to ID2"
 
echo
echo "    +-- TicketCharges..."
python TicketCharges_to_ID2TicketCharges.py "$EXPORT_PATH/TicketCharge.csv" || display_error_and_quit "Error importing TicketCharges to ID2"

#
# Ticket-related files
#

echo
echo "+-- importing Ticket-related files..."
cd "$DATAWD/importers/GDriveToPodaci"

echo
echo "    +-- set-up..."

pip install pycrypto
pip install --upgrade google-api-python-client

echo
echo "    +-- import..."
python GDrive_to_Podaci.py "$ID_PATH" "$EXPORT_PATH/Ticket.drivefolderids" || display_error_and_quit "Error importing Ticket-related files to ID2"

#
# rest of GoogleDrive files
#

echo
echo "+-- importing the rest of files..."
python Rest_of_GDrive_to_Podaci.py "$ID_PATH" "$EXPORT_PATH/GDrive.importedfiles"  || display_error_and_quit "Error importing the rest of GoogleDrive files to ID2"

#
# we're done!
#

cd "$CWD"
echo
echo "### ALL DONE."
echo
echo